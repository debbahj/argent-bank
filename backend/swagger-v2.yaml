swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: 1.0.0
  termsOfService: http://swagger.io/terms/
host: localhost:3001
basePath: /api/v2
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - User Module Transaction
      summary: Get a list of transactions
      description: API for fetching all user's transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: params
          schema:
            $ref: '#/definitions/TransactionsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction list retrieved successully
          schema:
            $ref: '#/definitions/Transactions'
        '404':
          description: Transaction list not found
        '500':
          description: Internal Server Error

  /user/profile/transaction/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module Transaction
      summary: Get a transaction by ID
      description: API for fetching one user's transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: id
          type: integer
          required: true
          description: ID of the transaction to get
      produces:
        - application/json
      responses:
        '200':
          description: Transaction retrieved successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid ID supplied
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

    patch:
      security:
        - Bearer: []
      tags:
        - User Module Transaction
      summary: Update an existing transaction
      description: API for updating a user's transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: id
          type: integer
          required: true
          description: ID of the transaction to update
        - in: body
          name: body
          description: Update user transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error


securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
      transactionData:
        type: object
        properties:
          date:
            type: string
          description:
            type: string
          amount:
            type: number
          details:
            type: object
            properties:
              type:
                type: string
              category:
                type: string
              notes:
                type: string
  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
      notes:
        type: string
  Transactions:
    type: object
    properties:
      pagination:
        $ref: '#/definitions/Pagination'
      records:
        type: array
        items:
          $ref: '#/definitions/Transaction'
  TransactionsRequest:
    type: object
    properties:
      date:
        type: string
      pagination:
        $ref: '#/definitions/PaginationRequest'
  Pagination:
    type: object
    properties:
      page:
        type: number
      items_per_page:
        type: number
      total_pages:
        type: number
      total:
        type: number
  PaginationRequest:
      type: object
      properties:
        page:
          type: number
        items_per_page:
          type: number